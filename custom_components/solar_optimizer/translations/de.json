{
    "title": "Solar Optimizer",
    "config": {
        "flow_title": "Solar Optimizer Konfiguration",
        "step": {
            "user": {
                "title": "Konfigurationstyp",
                "description": "Wählen Sie den Konfigurationstyp",
                "data": {
                    "device_type": "Gerätetyp"
                },
                "data_description": {
                    "device_type": "Einfaches Ein/Aus-Gerät oder Gerät mit variabler Leistungsregelung"
                }
            },
            "device_central": {
                "title": "Common parameters",
                "description": "Give the common parameters",
                "data": {
                    "refresh_period_sec": "Aktualisierungsperiode",
                    "power_consumption_entity_id": "Netto-Stromverbrauch",
                    "power_production_entity_id": "Solar-Stromproduktion",
                    "subscribe_to_events": "Bei jedem neuen Produktions-/Verbrauchswert neu berechnen",
                    "sell_cost_entity_id": "Energieverkaufspreis",
                    "buy_cost_entity_id": "Energiekaufpreis",
                    "sell_tax_percent_entity_id": "Verkaufssteuer in Prozent",
                    "smooth_production": "Solarproduktion glätten",
                    "battery_soc_entity_id": "Batterieladezustand",
                    "battery_charge_power_entity_id": "Batterieladeleistung",
                    "raz_time": "Zähler-Rücksetzzeit",
                    "smoothing_production_window_min": "Produktions-Glättungsfenster (Min)",
                    "smoothing_consumption_window_min": "Verbrauchs-Glättungsfenster (Min)",
                    "smoothing_battery_window_min": "Batterie-Glättungsfenster (Min)",
                    "battery_recharge_reserve_w": "Batterie-Ladereserve (W)",
                    "battery_recharge_reserve_before_smoothing": "Batterie Reserve vor Glättung anwenden"
                },
                "data_description": {
                    "refresh_period_sec": "Auch ohne neue Daten mindestens in dieser Periode in Sekunden aktualisieren. Warnung: Schwere Berechnungen werden in jeder Periode durchgeführt, achten Sie auf die CPU-Last. Nicht zu oft aktualisieren",
                    "power_consumption_entity_id": "Die entity_id des Haushaltsstromverbrauchs-Sensors (in positiven Watt). Dies sollte den Basisverbrauch des Haushalts darstellen. Wenn Sie einen Netzmesssensor verwenden, erwägen Sie die Erstellung eines Template-Sensors, der positive Verbrauchswerte liefert.",
                    "power_production_entity_id": "Die entity_id des Solar-Stromproduktions-Sensors.",
                    "subscribe_to_events": "Ereignisse abonnieren, um bei neuen Daten neu zu berechnen, sobald sie verfügbar sind. Achten Sie auf die CPU-Last.",
                    "sell_cost_entity_id": "Die entity_id, die den aktuellen Energieverkaufspreis enthält.",
                    "buy_cost_entity_id": "Die entity_id, die den aktuellen Energiekaufspreis enthält.",
                    "sell_tax_percent_entity_id": "Die Energieverkaufssteuer in Prozent (0 bis 100)",
                    "smooth_production": "Wenn aktiviert, wird die Solarproduktion geglättet, um harte Schwankungen zu vermeiden",
                    "battery_soc_entity_id": "Die entity_id des Batterieladezustands in %. Wenn Sie keine Batterie haben, lassen Sie dies leer",
                    "battery_charge_power_entity_id": "Die entity_id der Netto-Batterieladeleistung in Watt. Optional - nur für Diagnosen verwendet. Sie sollte negativ sein, wenn die Batterie lädt, und positiv, wenn die Batterie entlädt. Leer lassen, wenn keine Solarbatterie verwendet wird.",
                    "raz_time": "Zeit zum Zurücksetzen der Aktivzeitzähler. Sollte vor der ersten Sonneneinstrahlung liegen, aber nicht zu früh, um genügend Zeit für die nächtliche Aktivierung zu ermöglichen",
                    "smoothing_production_window_min": "Fenstergröße in Minuten zur Glättung der Solarproduktion. Standard: 15 Minuten. Auf 0 setzen zum Deaktivieren. Empfohlen: 10-20 Minuten bei instabilem Wetter.",
                    "smoothing_consumption_window_min": "Fenstergröße in Minuten zur Glättung des Stromverbrauchs. Standard: 0 (deaktiviert). Auf 0 setzen zum Deaktivieren der Glättung.",
                    "smoothing_battery_window_min": "Fenstergröße in Minuten zur Glättung der Batterieladeleistung. Standard: 0 (deaktiviert). Auf 0 setzen zum Deaktivieren der Glättung.",
                    "battery_recharge_reserve_w": "Reservieren Sie diese Anzahl von Watt aus der Solarproduktion für das Laden der Batterie, wenn der Batterie-SOC < 100% ist. Auf 0 setzen zum Deaktivieren. Dies stellt sicher, dass die Batterie Vorrang vor Geräten hat.",
                    "battery_recharge_reserve_before_smoothing": "Ladestrom Reserve für Batterie vor dem Glätten anwenden, um glattere Übergänge zu ermöglichen wenn die Reserve nicht mehr benötigt wird (Batterie bei 100%). Nur relevant wenn Glättung aktiviert ist."
                }
            },
            "device": {
                "title": "Device parameters",
                "description": "Give the device parameters",
                "data": {
                    "name": "Device name",
                    "entity_id": "Device entity id",
                    "power_max": "Device power",
                    "check_usable_template": "Usable template",
                    "check_active_template": "Active template",
                    "duration_min": "Duration min",
                    "duration_stop_min": "Duration stop min",
                    "action_mode": "Action mode",
                    "activation_service": "Activation service",
                    "deactivation_service": "Deactivation service",
                    "battery_soc_threshold": "Battery soc threshold",
                    "max_on_time_per_day_min": "Max on time per day",
                    "min_on_time_per_day_min": "Min on time per day",
                    "offpeak_time": "Offpeak time"
                },
                "data_description": {
                    "name": "The name of the device",
                    "entity_id": "The entity_id of the device",
                    "power_max": "The power of the device when activated. Can be a number or a template",
                    "check_usable_template": "The template to check if the device is usable. Example `True ` or `states('sensor.my_sensor') | float > 10` (don't forgeet double accolades)",
                    "check_active_template": "The template to check if the device is active. Keep it empty for switch type device or apparented. Example `is_state('sensor.my_sensor', 'hvac_mode', 'heat')` (with double accolades)",
                    "duration_min": "The minimum duration of the device when turned on in minutes",
                    "duration_stop_min": "The minimum duration of the device when turned off in minutes",
                    "action_mode": "The action mode of the device. `service` to service call a service to turn on or off or `event` to send an event to turn on or off",
                    "activation_service": "The service to activate the device. Example `switch/turn_on` or `climate/set_hvac_mode/hvac_mode:cool`",
                    "deactivation_service": "The service to deactivate the device. Example `switch/turn_off` or `climate/set_hvac_mode/hvac_mode:off`. Keep it empty if the device will turn off by itself",
                    "battery_soc_threshold": "The battery state of charge threshold to activate the device. Can be a number or a template",
                    "max_on_time_per_day_min": "The maximum time per day in state on in minutes. Can be a number or a template. If minium time is not reached during daylight, it will be activated during offpeak time until max time is reached",
                    "min_on_time_per_day_min": "The minimum time per day in state on in minutes. Can be a number or a template. If minium time is not reached during daylight, it will be activated during offpeak time",
                    "offpeak_time": "The offpeak time with format HH:MM"
                }
            },
            "powered_device": {
                "title": "Powered device parameters",
                "description": "Give the powered device parameters",
                "data": {
                    "name": "Device name",
                    "entity_id": "Device entity id",
                    "power_max": "Device max power",
                    "power_min": "Device min power",
                    "power_step": "Device power step",
                    "check_usable_template": "Usable template",
                    "check_active_template": "Active template",
                    "duration_min": "Duration min",
                    "duration_stop_min": "Duration stop min",
                    "action_mode": "Action mode",
                    "activation_service": "Activation service",
                    "deactivation_service": "Deactivation service",
                    "power_entity_id": "Power entity id",
                    "duration_power_min": "Duration of power change",
                    "change_power_service": "Power change service",
                    "convert_power_divide_factor": "Divide factor",
                    "battery_soc_threshold": "Battery soc threshold",
                    "max_on_time_per_day_min": "Max on time per day",
                    "min_on_time_per_day_min": "Min on time per day",
                    "offpeak_time": "Offpeak time"
                },
                "data_description": {
                    "name": "The name of the device",
                    "entity_id": "The entity_id of the device",
                    "power_max": "The power of the device when activated. Can be a number or a template",
                    "power_min": "The min power consumption of the device when activated",
                    "power_step": "The step of power for the device",
                    "check_usable_template": "The template to check if the device is usable. Example `True ` or `states('sensor.my_sensor') | float > 10` (don't forgeet double accolades)",
                    "check_active_template": "The template to check if the device is active. Keep it empty for switch type device or apparented. Example `is_state('sensor.my_sensor', 'hvac_mode', 'heat')` (with double accolades)",
                    "duration_min": "The minimum duration of the device when turned on in minutes",
                    "duration_stop_min": "The minimum duration of the device when turned off in minutes",
                    "action_mode": "The action mode of the device. `service` to service call a service to turn on or off or `event` to send an event to turn on or off",
                    "activation_service": "The service to activate the device. Example `switch/turn_on` or `climate/set_hvac_mode/hvac_mode:cool`",
                    "deactivation_service": "The service to deactivate the device. Example `switch/turn_off` or `climate/set_hvac_mode/hvac_mode:off`",
                    "power_entity_id": "The entity id of the power sensor",
                    "duration_power_min": "The minimal duration of each power change in minutes",
                    "change_power_service": "The service used to change the power. Example `number/set_value`",
                    "convert_power_divide_factor": "The divide factor to convert power into units of the power device. If conversion from power to ampere, the divisor should be 220",
                    "battery_soc_threshold": "The battery state of charge threshold to activate the device. Can be a number or a template",
                    "max_on_time_per_day_min": "The maximum time per day in state on in minutes. Can be a number or a template. If minium time is not reached during daylight, it will be activated during offpeak time until max time is reached",
                    "min_on_time_per_day_min": "The minimum time per day in state on in minutes. Can be a number or a template. If minium time is not reached during daylight, it will be activated during offpeak time",
                    "offpeak_time": "The offpeak time with format HH:MM"
                }
            }
        },
        "error": {
            "format_time_invalid": "Das Zeitformat sollte HH:MM sein"
        }
    },
    "options": {
        "flow_title": "Solar Optimizer Optionskonfiguration",
        "step": {
            "user": {
                "title": "Konfigurationstyp",
                "description": "Wählen Sie den Konfigurationstyp",
                "data": {
                    "device_type": "Gerätetyp"
                },
                "data_description": {
                    "device_type": "Gemeinsame Konfiguration oder gerätespezifische Konfiguration"
                }
            },
            "device_central": {
                "title": "Common parameters",
                "description": "Give the common parameters",
                "data": {
                    "refresh_period_sec": "Aktualisierungsperiode",
                    "power_consumption_entity_id": "Netto-Stromverbrauch",
                    "power_production_entity_id": "Solar-Stromproduktion",
                    "subscribe_to_events": "Bei jedem neuen Produktions-/Verbrauchswert neu berechnen",
                    "sell_cost_entity_id": "Energieverkaufspreis",
                    "buy_cost_entity_id": "Energiekaufpreis",
                    "sell_tax_percent_entity_id": "Verkaufssteuer in Prozent",
                    "smooth_production": "Solarproduktion glätten",
                    "battery_soc_entity_id": "Batterieladezustand",
                    "battery_charge_power_entity_id": "Batterieladeleistung",
                    "raz_time": "Zähler-Rücksetzzeit",
                    "smoothing_production_window_min": "Produktions-Glättungsfenster (Min)",
                    "smoothing_consumption_window_min": "Verbrauchs-Glättungsfenster (Min)",
                    "smoothing_battery_window_min": "Batterie-Glättungsfenster (Min)",
                    "battery_recharge_reserve_w": "Batterie-Ladereserve (W)",
                    "battery_recharge_reserve_before_smoothing": "Batterie Reserve vor Glättung anwenden"
                },
                "data_description": {
                    "refresh_period_sec": "Auch ohne neue Daten mindestens in dieser Periode in Sekunden aktualisieren. Warnung: Schwere Berechnungen werden in jeder Periode durchgeführt, achten Sie auf die CPU-Last. Nicht zu oft aktualisieren",
                    "power_consumption_entity_id": "Die entity_id des Haushaltsstromverbrauchs-Sensors (in positiven Watt). Dies sollte den Basisverbrauch des Haushalts darstellen. Wenn Sie einen Netzmesssensor verwenden, erwägen Sie die Erstellung eines Template-Sensors, der positive Verbrauchswerte liefert.",
                    "power_production_entity_id": "Die entity_id des Solar-Stromproduktions-Sensors.",
                    "subscribe_to_events": "Ereignisse abonnieren, um bei neuen Daten neu zu berechnen, sobald sie verfügbar sind. Achten Sie auf die CPU-Last.",
                    "sell_cost_entity_id": "Die entity_id, die den aktuellen Energieverkaufspreis enthält.",
                    "buy_cost_entity_id": "Die entity_id, die den aktuellen Energiekaufspreis enthält.",
                    "sell_tax_percent_entity_id": "Die Energieverkaufssteuer in Prozent (0 bis 100)",
                    "smooth_production": "Wenn aktiviert, wird die Solarproduktion geglättet, um harte Schwankungen zu vermeiden",
                    "battery_soc_entity_id": "Die entity_id des Batterieladezustands in %. Wenn Sie keine Batterie haben, lassen Sie dies leer",
                    "battery_charge_power_entity_id": "Die entity_id der Netto-Batterieladeleistung in Watt. Optional - nur für Diagnosen verwendet. Sie sollte negativ sein, wenn die Batterie lädt, und positiv, wenn die Batterie entlädt. Leer lassen, wenn keine Solarbatterie verwendet wird.",
                    "raz_time": "Zeit zum Zurücksetzen der Aktivzeitzähler. Sollte vor der ersten Sonneneinstrahlung liegen, aber nicht zu früh, um genügend Zeit für die nächtliche Aktivierung zu ermöglichen",
                    "smoothing_production_window_min": "Fenstergröße in Minuten zur Glättung der Solarproduktion. Standard: 15 Minuten. Auf 0 setzen zum Deaktivieren. Empfohlen: 10-20 Minuten bei instabilem Wetter.",
                    "smoothing_consumption_window_min": "Fenstergröße in Minuten zur Glättung des Stromverbrauchs. Standard: 0 (deaktiviert). Auf 0 setzen zum Deaktivieren der Glättung.",
                    "smoothing_battery_window_min": "Fenstergröße in Minuten zur Glättung der Batterieladeleistung. Standard: 0 (deaktiviert). Auf 0 setzen zum Deaktivieren der Glättung.",
                    "battery_recharge_reserve_w": "Reservieren Sie diese Anzahl von Watt aus der Solarproduktion für das Laden der Batterie, wenn der Batterie-SOC < 100% ist. Auf 0 setzen zum Deaktivieren. Dies stellt sicher, dass die Batterie Vorrang vor Geräten hat.",
                    "battery_recharge_reserve_before_smoothing": "Ladestrom Reserve für Batterie vor dem Glätten anwenden, um glattere Übergänge zu ermöglichen wenn die Reserve nicht mehr benötigt wird (Batterie bei 100%). Nur relevant wenn Glättung aktiviert ist."
                }
            },
            "device": {
                "title": "Device parameters",
                "description": "Give the device parameters",
                "data": {
                    "name": "Device name",
                    "entity_id": "Device entity id",
                    "power_max": "Device power",
                    "check_usable_template": "Usable template",
                    "check_active_template": "Active template",
                    "duration_min": "Duration min",
                    "duration_stop_min": "Duration stop min",
                    "action_mode": "Action mode",
                    "activation_service": "Activation service",
                    "deactivation_service": "Deactivation service",
                    "battery_soc_threshold": "Battery soc threshold",
                    "max_on_time_per_day_min": "Max on time per day",
                    "min_on_time_per_day_min": "Min on time per day",
                    "offpeak_time": "Offpeak time"
                },
                "data_description": {
                    "name": "The name of the device",
                    "entity_id": "The entity_id of the device",
                    "power_max": "The power of the device when activated. Can be a number or a template",
                    "check_usable_template": "The template to check if the device is usable. Example `True ` or `states('sensor.my_sensor') | float > 10` (don't forgeet double accolades)",
                    "check_active_template": "The template to check if the device is active. Keep it empty for switch type device or apparented. Example `is_state('sensor.my_sensor', 'hvac_mode', 'heat')` (with double accolades)",
                    "duration_min": "The minimum duration of the device when turned on in minutes",
                    "duration_stop_min": "The minimum duration of the device when turned off in minutes",
                    "action_mode": "The action mode of the device. `service` to service call a service to turn on or off or `event` to send an event to turn on or off",
                    "activation_service": "The service to activate the device. Example `switch/turn_on` or `climate/set_hvac_mode/hvac_mode:cool`",
                    "deactivation_service": "The service to deactivate the device. Example `switch/turn_off` or `climate/set_hvac_mode/hvac_mode:off`. Keep it empty if the device will turn off by itself",
                    "battery_soc_threshold": "The battery state of charge threshold to activate the device. Can be a number or a template",
                    "max_on_time_per_day_min": "The maximum time per day in state on in minutes. Can be a number or a template. If minium time is not reached during daylight, it will be activated during offpeak time until max time is reached",
                    "min_on_time_per_day_min": "The minimum time per day in state on in minutes. Can be a number or a template. If minium time is not reached during daylight, it will be activated during offpeak time",
                    "offpeak_time": "The offpeak time with format HH:MM"
                }
            },
            "powered_device": {
                "title": "Powered device parameters",
                "description": "Give the powered device parameters",
                "data": {
                    "name": "Device name",
                    "entity_id": "Device entity id",
                    "power_max": "Device max power",
                    "power_min": "Device min power",
                    "power_step": "Device power step",
                    "check_usable_template": "Usable template",
                    "check_active_template": "Active template",
                    "duration_min": "Duration min",
                    "duration_stop_min": "Duration stop min",
                    "action_mode": "Action mode",
                    "activation_service": "Activation service",
                    "deactivation_service": "Deactivation service",
                    "power_entity_id": "Power entity id",
                    "duration_power_min": "Duration of power change",
                    "change_power_service": "Power change service",
                    "convert_power_divide_factor": "Divide factor",
                    "battery_soc_threshold": "Battery soc threshold",
                    "max_on_time_per_day_min": "Max on time per day",
                    "min_on_time_per_day_min": "Min on time per day",
                    "offpeak_time": "Offpeak time"
                },
                "data_description": {
                    "name": "The name of the device",
                    "entity_id": "The entity_id of the device",
                    "power_max": "The power of the device when activated. Can be a number or a template",
                    "power_min": "The min power consumption of the device when activated",
                    "power_step": "The step of power for the device",
                    "check_usable_template": "The template to check if the device is usable. Example `True ` or `states('sensor.my_sensor') | float > 10` (don't forgeet double accolades)",
                    "check_active_template": "The template to check if the device is active. Keep it empty for switch type device or apparented. Example `is_state('sensor.my_sensor', 'hvac_mode', 'heat')` (with double accolades)",
                    "duration_min": "The minimum duration of the device when turned on in minutes",
                    "duration_stop_min": "The minimum duration of the device when turned off in minutes",
                    "action_mode": "The action mode of the device. `service` to service call a service to turn on or off or `event` to send an event to turn on or off",
                    "activation_service": "The service to activate the device. Example `switch/turn_on` or `climate/set_hvac_mode/hvac_mode:cool`",
                    "deactivation_service": "The service to deactivate the device. Example `switch/turn_off` or `climate/set_hvac_mode/hvac_mode:off`",
                    "power_entity_id": "The entity id of the power sensor",
                    "duration_power_min": "The minimal duration of each power change in minutes",
                    "change_power_service": "The service used to change the power. Example `number/set_value`",
                    "convert_power_divide_factor": "The divide factor to convert power into units of the power device. If conversion from power to ampere, the divisor should be 220",
                    "battery_soc_threshold": "The battery state of charge threshold to activate the device. Can be a number or a template",
                    "max_on_time_per_day_min": "The maximum time per day in state on in minutes. Can be a number or a template. If minium time is not reached during daylight, it will be activated during offpeak time until max time is reached",
                    "min_on_time_per_day_min": "The minimum time per day in state on in minutes. Can be a number or a template. If minium time is not reached during daylight, it will be activated during offpeak time",
                    "offpeak_time": "The offpeak time with format HH:MM"
                }
            }
        },
        "error": {
            "format_time_invalid": "Das Zeitformat sollte HH:MM sein"
        }
    },
    "selector": {
        "device_type": {
            "options": {
                "central_config": "Gemeinsame Konfiguration",
                "device_type": "Normales Ein/Aus-Gerät",
                "powered_device_type": "Gerät mit variabler Leistung"
            }
        },
        "action_mode": {
            "options": {
                "action_call": "Aktionsaufruf",
                "event": "Ereignis"
            }
        }
    }
}